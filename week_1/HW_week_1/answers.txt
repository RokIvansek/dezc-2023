Code to generate answers to week 1 part 1


Question 1. Knowing docker tags
*******************************

Run the command to get information on Docker

docker --help

Now run the command to get help on the "docker build" command

Which tag has the following text? - Write the image ID to the file

--imageid string
--iidfile string
--idimage string
--idfile string

I ran

docker build --help

relevant output:

Options:
      --add-host list           Add a custom host-to-IP mapping (host:ip)
      --build-arg list          Set build-time variables
      --cache-from strings      Images to consider as cache sources
      --disable-content-trust   Skip image verification (default true)
  -f, --file string             Name of the Dockerfile (Default is 'PATH/Dockerfile')
      --iidfile string          Write the image ID to the file

A: --iidfile string

Question 2. Understanding docker first run
******************************************

Run docker with the python:3.9 image in an interactive mode and the entrypoint of bash. Now check the python modules that are installed ( use pip list). How many python packages/modules are installed?

1
6
3
7

Created a new dockerfile, built the image

docker build -t hww1:docker .

then ran it

docker run -it hww1:docker

then check packages 

pip list

O:
Package    Version
---------- -------
pip        22.0.4
setuptools 58.1.0
wheel      0.38.4

A: 3

Prepare Postgres
****************

Run Postgres and load data as shown in the videos We'll use the green taxi trips from January 2019:

wget https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-01.csv.gz

You will also need the dataset with zones:

wget https://s3.amazonaws.com/nyc-tlc/misc/taxi+_zone_lookup.csv

Download this data and put it into Postgres (with jupyter notebooks or with a pipeline)

I first set up a new database in the HW_week_1 folder

mkdir green_taxi_pg_data

docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="green_taxi" \
  -v $(pwd)/green_taxi_pg_data:/var/lib/postgresql/data \
  -p 5432:5432 \
  postgres:13

then i downloaded the trips table and the zones table and ingested them into the db,
all the code is in the ingesting_taxi_data_for_hw jupyter notebook

then is just used pgcli to write the queries


Question 3. Count records
*************************
How many taxi trips were totally made on January 15?

Tip: started and finished on 2019-01-15.

Remember that lpep_pickup_datetime and lpep_dropoff_datetime columns are in the format timestamp (date and hour+min+sec) and not in date.

20689
20530
17630
21090

select count(*) from green_taxi_trips where cast(lpep_pickup_datetime as date) = TO_DATE('20190115','YYYYMMDD') and cast(lpep_dropoff_datetime as date) = TO_DATE('20190115','YYYYMMDD')

A: 20530

Question 4. Largest trip for each day
*************************************
Which was the day with the largest trip distance Use the pick up time for your calculations.

2019-01-18
2019-01-28
2019-01-15
2019-01-10

select cast(lpep_pickup_datetime as date) as day, max(trip_distance) as max_distance from green_taxi_trips group by cast(lpep_pickup_datetime as date) order by max_distance desc

+------------+--------------+
| day        | max_distance |
|------------+--------------|
| 2019-01-15 | 117.99       |
| 2019-01-18 | 80.96        |
| 2019-01-28 | 64.27        |
| 2019-01-10 | 64.2    ...

A: 2019-01-15

Question 5. The number of passengers
************************************
In 2019-01-01 how many trips had 2 and 3 passengers?

2: 1282 ; 3: 266
2: 1532 ; 3: 126
2: 1282 ; 3: 254
2: 1282 ; 3: 274

select passenger_count, count(*) 
from (
	select passenger_count 
	from green_taxi_trips 
	where 
		(passenger_count = 2 or passenger count = 3) 
		and cast(lpep_pickup_datetime as date) = TO_DATE('20190101','YYYYMMDD')
	) as subq
group by passenger_count

+-----------------+-------+
| passenger_count | count |
|-----------------+-------|
| 2               | 1282  |
| 3               | 254   |
+-----------------+-------+

A: 2: 1282 ; 3: 254

Question 6. Largest tip
***********************
For the passengers picked up in the Astoria Zone which was the drop off zone that had the largest tip? We want the name of the zone, not the id.

Note: it's not a typo, it's tip , not trip

Central Park
Jamaica
South Ozone Park
Long Island City/Queens Plaza


select puzone, dozone, max(tip_amount) as max_tip
from (
	select a."PULocationID", b."Zone" as puzone, a."DOLocationID", c."Zone" as dozone, a.tip_amount
	from green_taxi_trips a
	join zones b
	on a."PULocationID" = b."LocationID"
	join zones as c
	on a."DOLocationID" = c."LocationID"
) as s
where puzone = 'Astoria'
group by puzone, dozone
order by max_tip desc

+---------+-------------------------------------+---------+
| puzone  | dozone                              | max_tip |
|---------+-------------------------------------+---------|
| Astoria | Long Island City/Queens Plaza       | 88.0    |
| Astoria | Central Park                        | 30.0    |
| Astoria | Jamaica                             | 25.0    |
| Astoria | <null>                              | 25.0    |
| Astoria | Astoria                             | 18.16   |
| Astoria | Coney Island                        | 16.95   |
...

A: Long Island City/Queens Plaza


































